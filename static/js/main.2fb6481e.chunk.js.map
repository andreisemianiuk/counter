{"version":3,"sources":["Display.tsx","Button.tsx","Settings.tsx","Counter_1/Counter_1.tsx","Counter_2/Counter_2.tsx","Error404.tsx","Routes.tsx","Header.tsx","App.tsx","index.tsx","Counter_2/Counter_2.module.css"],"names":["Display","className","error","editMode","startValue","maxValue","Button","title","callback","disabled","onClick","Settings","props","useState","setStartValue","setMaxValue","useEffect","newStartValue","localStorage","getItem","newMaxValue","JSON","parse","errorMax","type","value","onChange","e","num","currentTarget","changeMaxValue","errorStart","changeStartValue","Counter_1","setEditMode","setErrorMax","setErrorStart","setItem","stringify","Counter_2","set","s","container","counter","displayWrapper","buttonsWrapper","Error404","PATH","Routes","path","exact","render","to","Header","open","setOpen","onMouseOver","onMouseOut","activeClassName","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2fb6481e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css'\r\n\r\ntype DisplayType = {\r\n  className?: string\r\n  editMode: boolean\r\n  error: boolean\r\n  startValue: number\r\n  maxValue: number\r\n}\r\n\r\nfunction Display({className,error, editMode, startValue, maxValue}: DisplayType) {\r\n  return (\r\n    <div className={className ? className : 'display-wrapper'}>\r\n      {error ? <div className={'display-error'}>Invalid value</div> :\r\n        editMode ? <div className={'display-message'}>Enter set to save changes</div> :\r\n          <div className={`display-count ${startValue === maxValue ? 'red' : ''}`}>{startValue}</div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display\r\n","import React from 'react'\r\nimport './App.css'\r\n\r\ntype ButtonType = {\r\n  editMode?: boolean\r\n  error?: boolean\r\n  title: string\r\n  startValue: number\r\n  maxValue: number\r\n  callback: () => void\r\n}\r\n\r\nfunction Button({error,editMode, title, startValue, maxValue, callback}: ButtonType) {\r\n  const clickHandler = () => {\r\n    callback()\r\n  }\r\n  const disabled = error || (editMode && error) || (title === 'inc' && startValue >= maxValue)\r\n    || (title === 'reset' && maxValue !== startValue)\r\n  \r\n  return (\r\n    <button\r\n      className={`btn ${disabled ? 'disabled' : null}`}\r\n      onClick={clickHandler}\r\n      disabled={disabled}\r\n    >\r\n      {title}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport './App.css'\r\n\r\ntype SettingsType = {\r\n  errorMax: boolean\r\n  errorStart: boolean\r\n  startValue: number\r\n  maxValue: number\r\n  changeStartValue: (num: number) => void\r\n  changeMaxValue: (num: number) => void\r\n}\r\n\r\nfunction Settings(props: SettingsType) {\r\n  let [startValue, setStartValue] = useState(0)\r\n  let [maxValue, setMaxValue] = useState(0)\r\n  \r\n  useEffect(() => {\r\n    let newStartValue = localStorage.getItem('start-value')\r\n    let newMaxValue = localStorage.getItem('max-value')\r\n    if (newStartValue) {\r\n      setStartValue(JSON.parse(newStartValue))\r\n    }\r\n    if (newMaxValue) {\r\n      setMaxValue(JSON.parse(newMaxValue))\r\n    }\r\n  }, [])\r\n  \r\n  const changeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const num = +e.currentTarget.value\r\n    setStartValue(num)\r\n    props.changeStartValue(num)\r\n  }\r\n  const changeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const num = +e.currentTarget.value\r\n    setMaxValue(num)\r\n    props.changeMaxValue(num)\r\n  }\r\n  \r\n  return (\r\n    <div className='settings-wrapper'>\r\n      <div className={'settings-input-wrapper'}>\r\n        max value:\r\n        <input\r\n          className={`settings-input ${props.errorMax ? 'error' : ''}`}\r\n          type={'number'}\r\n          value={maxValue}\r\n          onChange={changeMaxValue}\r\n        />\r\n      </div>\r\n      <div className={'settings-input-wrapper'}>\r\n        start value:\r\n        <input\r\n          className={`settings-input ${props.errorStart ? 'error' : ''}`}\r\n          type={'number'}\r\n          value={startValue}\r\n          onChange={changeStartValue}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React, { useEffect, useState } from 'react'\r\nimport '../App.css'\r\nimport Display from '../Display'\r\nimport Button from '../Button'\r\nimport Settings from '../Settings'\r\n\r\nfunction Counter_1() {\r\n  let [startValue, setStartValue] = useState(0)\r\n  let [maxValue, setMaxValue] = useState(0)\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [errorMax, setErrorMax] = useState(false)\r\n  let [errorStart, setErrorStart] = useState(false)\r\n  \r\n  let error = errorMax || errorStart\r\n  if (!maxValue && !startValue) {\r\n    error = true\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const newStartValue = localStorage.getItem('start-value')\r\n    const newMaxValue = localStorage.getItem('max-value')\r\n    \r\n    if (newStartValue) {\r\n      setStartValue(JSON.parse(newStartValue))\r\n    }\r\n    if (newMaxValue) {\r\n      setMaxValue(JSON.parse(newMaxValue))\r\n    }\r\n  }, [])\r\n  \r\n  const increment = () => {\r\n    setStartValue(++startValue)\r\n  }\r\n  const reset = () => {\r\n    const startValue = localStorage.getItem('start-value')\r\n    if (startValue) {\r\n      setStartValue(+startValue)\r\n    }\r\n  }\r\n  const set = () => {\r\n    localStorage.setItem('start-value', JSON.stringify(startValue))\r\n    localStorage.setItem('max-value', JSON.stringify(maxValue))\r\n    setEditMode(false)\r\n  }\r\n  \r\n  const changeStartValue = (num: number) => {\r\n    if (num >= maxValue || num < 0) {\r\n      setErrorStart(true)\r\n    } else if (num !== startValue) {\r\n      setStartValue(num)\r\n      setEditMode(true)\r\n    } else {\r\n      setEditMode(true)\r\n      setErrorStart(false)\r\n    }\r\n  }\r\n  \r\n  const changeMaxValue = (num: number) => {\r\n    if (num <= startValue || num < 0) {\r\n      setErrorMax(true)\r\n    } else if (num !== maxValue) {\r\n      setMaxValue(num)\r\n      setEditMode(true)\r\n    } else {\r\n      setEditMode(true)\r\n      setErrorMax(false)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className='container'>\r\n      <div className='settings'>\r\n        <Settings\r\n          errorMax={errorMax}\r\n          errorStart={errorStart}\r\n          startValue={startValue}\r\n          maxValue={maxValue}\r\n          changeMaxValue={changeMaxValue}\r\n          changeStartValue={changeStartValue}\r\n        />\r\n        <div className='buttons-wrapper'>\r\n          <Button\r\n            title={'set'}\r\n            error={error}\r\n            startValue={startValue}\r\n            maxValue={maxValue}\r\n            callback={set}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='counter'>\r\n        <Display\r\n          startValue={startValue}\r\n          error={error}\r\n          maxValue={maxValue}\r\n          editMode={editMode}\r\n        />\r\n        <div className='buttons-wrapper'>\r\n          <Button\r\n            editMode={editMode}\r\n            error={error}\r\n            title={'inc'}\r\n            startValue={startValue}\r\n            maxValue={maxValue}\r\n            callback={increment}\r\n          />\r\n          <Button\r\n            editMode={editMode}\r\n            error={error}\r\n            title={'reset'}\r\n            startValue={startValue}\r\n            maxValue={maxValue}\r\n            callback={reset}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Counter_1\r\n","import React, { useEffect, useState } from 'react'\r\nimport '../App.css'\r\nimport Display from '../Display'\r\nimport Button from '../Button'\r\nimport Settings from '../Settings'\r\nimport s from './Counter_2.module.css'\r\n\r\nfunction Counter_2() {\r\n  let [startValue, setStartValue] = useState(0)\r\n  let [maxValue, setMaxValue] = useState(0)\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [errorMax, setErrorMax] = useState(false)\r\n  let [errorStart, setErrorStart] = useState(false)\r\n  \r\n  let error = errorMax || errorStart\r\n  if (!maxValue && !startValue) {\r\n    error = true\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const newStartValue = localStorage.getItem('start-value')\r\n    const newMaxValue = localStorage.getItem('max-value')\r\n    \r\n    if (newStartValue) {\r\n      setStartValue(JSON.parse(newStartValue))\r\n    }\r\n    if (newMaxValue) {\r\n      setMaxValue(JSON.parse(newMaxValue))\r\n    }\r\n  }, [])\r\n  \r\n  const increment = () => {\r\n    setStartValue(++startValue)\r\n  }\r\n  const reset = () => {\r\n    const startValue = localStorage.getItem('start-value')\r\n    if (startValue) {\r\n      setStartValue(+startValue)\r\n    }\r\n  }\r\n  const set = () => {\r\n    if (editMode) {\r\n      localStorage.setItem('start-value', JSON.stringify(startValue))\r\n      localStorage.setItem('max-value', JSON.stringify(maxValue))\r\n      setEditMode(false)\r\n    } else {\r\n      setEditMode(true)\r\n    }\r\n  }\r\n  \r\n  const changeStartValue = (num: number) => {\r\n    if (num >= maxValue || num < 0) {\r\n      setErrorStart(true)\r\n    } else if (num !== startValue) {\r\n      setStartValue(num)\r\n    } else {\r\n      setErrorStart(false)\r\n    }\r\n  }\r\n  \r\n  const changeMaxValue = (num: number) => {\r\n    if (num <= startValue || num < 0) {\r\n      setErrorMax(true)\r\n    } else if (num !== maxValue) {\r\n      setMaxValue(num)\r\n    } else {\r\n      setErrorMax(false)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.counter}>\r\n        {editMode\r\n          ?\r\n          <Settings\r\n            errorMax={errorMax}\r\n            errorStart={errorStart}\r\n            startValue={startValue}\r\n            maxValue={maxValue}\r\n            changeMaxValue={changeMaxValue}\r\n            changeStartValue={changeStartValue}\r\n          />\r\n          : <Display\r\n            className={s.displayWrapper}\r\n            startValue={startValue}\r\n            error={error}\r\n            maxValue={maxValue}\r\n            editMode={editMode}\r\n          />\r\n        }\r\n        \r\n        <div className={s.buttonsWrapper}>\r\n          {!editMode ?\r\n            <>\r\n              <Button\r\n                editMode={editMode}\r\n                error={error}\r\n                title={'inc'}\r\n                startValue={startValue}\r\n                maxValue={maxValue}\r\n                callback={increment}\r\n              />\r\n              <Button\r\n                editMode={editMode}\r\n                error={error}\r\n                title={'reset'}\r\n                startValue={startValue}\r\n                maxValue={maxValue}\r\n                callback={reset}\r\n              />\r\n              <Button\r\n                editMode={editMode}\r\n                error={error}\r\n                title={'set'}\r\n                startValue={startValue}\r\n                maxValue={maxValue}\r\n                callback={set}\r\n              />\r\n            </>\r\n            :\r\n            <Button\r\n              editMode={editMode}\r\n              error={error}\r\n              title={'set'}\r\n              startValue={startValue}\r\n              maxValue={maxValue}\r\n              callback={set}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Counter_2\r\n","import React from 'react'\r\n\r\n\r\nfunction Error404() {\r\n  return (\r\n    <div className={'error-container'}>\r\n      <div className={'error-number'}>404</div>\r\n      <div className={'error-text'}>Page not found!</div>\r\n      <div className={'error-smile'}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport Counter_1 from './Counter_1/Counter_1'\r\nimport Counter_2 from './Counter_2/Counter_2'\r\nimport Error404 from './Error404'\r\n\r\nexport const PATH = {\r\n  COUNTER_1: '/counter_1',\r\n  COUNTER_2: '/counter_2',\r\n}\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path={'/'} exact render={() => <Redirect to={PATH.COUNTER_1}/>}/>\r\n        <Route path={PATH.COUNTER_1} render={() => <Counter_1 />}/>\r\n        <Route path={PATH.COUNTER_2} render={() => <Counter_2 />}/><Route render={() => <Error404/>}/>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n  const [open, setOpen] = useState(false)\r\n  \r\n  const showMenu = () => {\r\n    setOpen(true)\r\n  }\r\n  const hideMenu = () => {\r\n    setOpen(false)\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className={open ? 'wrapperIsNavOpen' : 'headerWrapper'} onMouseOver={showMenu} onMouseOut={hideMenu}>\r\n      <div className={'nav'}>\r\n        <div className={'icon'}>menu</div>\r\n        <div className={'navBody'}>\r\n          <NavLink className={'link'} activeClassName={'activeLink'} to={'/counter_1'}>counter_1</NavLink>\r\n          <NavLink className={'link'} activeClassName={'activeLink'} to={'/counter_2'}>counter_2</NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Routes from './Routes'\r\nimport Header from './Header'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div className='main-container'>\r\n      <HashRouter>\r\n        <Header/>\r\n        <Routes/>\r\n      </HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Counter_2_container__tFgQj\",\"counter\":\"Counter_2_counter__2txGp\",\"buttonsWrapper\":\"Counter_2_buttonsWrapper__sBv43\",\"displayWrapper\":\"Counter_2_displayWrapper__3We2q\"};"],"sourceRoot":""}